<?xml version="1.0" encoding="UTF-8"?>
<jube>
    <benchmark name="exchange" outpath="@OUTPUT_DIR@">

        <parameterset name="system" init_with="@GHEXBENCH_DIR@/utils/slurm/execute.xml:jobsystem_params">
            <parameter name="system">ault</parameter>
            <parameter name="subsystem">ault_18</parameter>
            <parameter name="jobsystem">slurm</parameter>
            <parameter name="jobsystem_jobfile">slurm_job</parameter>
            <parameter name="system_jobfile">ault_job</parameter>
            <parameter name="jobfile">job</parameter>
            <parameter name="run_cmd">mpirun</parameter>
            <parameter name="run_cmd_args"></parameter>
            <parameter name="submit_cmd_args">--nodelist=ault18</parameter>
        </parameterset>

        <parameterset name="variants">
            <parameter name="executable">@EXECUTABLES@</parameter>
            <parameter name="bench_type" tag="single_node">single_node</parameter>
        </parameterset>

        <parameterset name="specs_single_node">
            <parameter name="nodes" type="int">1</parameter>
            <parameter name="taskspernode" type="int">64</parameter>
            <parameter name="taskspersocket" type="int">64</parameter>
            <parameter name="cpuspertask" type="int">1</parameter>
            <parameter name="tasks" type="int" mode="python">int($nodes*$taskspernode)</parameter>
            <parameter name="timelimit" type="string">01:00:00</parameter>
            <parameter name="L" type="int">32,64,128</parameter>
            <parameter name="halo" type="int">1,5</parameter>
            <parameter name="num_fields" type="int">1,8</parameter>
            <parameter name="num_reps" type="int">500</parameter>
        </parameterset>

        <parameterset name="executable_args_set">
            <parameter name="executable_args">--domain ${L} ${L} ${L} --nrep ${num_reps} --nfields ${num_fields} --halo ${halo} --check</parameter>
        </parameterset>

        <fileset name="copy_jobfiles">
            <copy>@GHEXBENCH_DIR@/utils/${jobsystem}/flag.in</copy>
            <copy>@GHEXBENCH_DIR@/utils/${jobsystem}/${jobsystem_jobfile}.in</copy>
            <copy>@GHEXBENCH_SYSTEM_DIR@/${jobsystem}/${system_jobfile}.in</copy>
            <copy>@GHEXBENCH_SUBSYSTEM_DIR@/${jobsystem}/${jobfile}.in</copy>
        </fileset>

        <fileset name="copy_exe">
            <copy>@BINARY_DIR@/${executable}</copy>
        </fileset>

        <substituteset name="sub_flag" init_with="@GHEXBENCH_DIR@/utils/slurm/substitute.xml:slurm_sub">
            <iofile in="flag.in" out="flag" />
        </substituteset>

        <substituteset name="sub_jobsystem" init_with="@GHEXBENCH_DIR@/utils/slurm/substitute.xml:slurm_sub">
            <iofile in="${jobsystem_jobfile}.in" out="$jobsystem_jobfile" />
        </substituteset>

        <substituteset name="sub_system" init_with="@GHEXBENCH_DIR@/utils/slurm/substitute.xml:slurm_sub">
            <iofile in="${system_jobfile}.in" out="$system_jobfile" />
        </substituteset>

        <substituteset name="sub_job" init_with="@GHEXBENCH_DIR@/utils/slurm/substitute.xml:slurm_sub">
            <iofile in="${jobfile}.in" out="$jobfile" />
        </substituteset>

        <step name="run" work_dir="@WORK_DIR@/bench_${jube_benchmark_id}_${jube_wp_id}">
            <use>system</use>
            <use>copy_jobfiles</use>
            <use>copy_exe</use>
            <use>sub_flag</use>
            <use>sub_jobsystem</use>
            <use>sub_system</use>
            <use>sub_job</use>
            <use>variants</use>
            <use>specs_${bench_type}</use>
            <use>executable_args_set</use>

            <do>cp ${jobsystem_jobfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
            <do>cp ${system_jobfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
            <do>cp ${jobfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>

            <do>echo "${submit_cmd} ${submit_cmd_args} ${executable}"</do>
            <do>touch ${done_file}</do>
            <do>touch job.out</do>
            <do>touch job.err</do>

            <do>cp ${outlogfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
            <do>cp ${errlogfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
            <do>cp ${executable} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
        </step>

    </benchmark>
</jube>

